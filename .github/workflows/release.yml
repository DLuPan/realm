name: release
on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  release-corss:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        target:
          - x86_64-unknown-linux-gnu
          - x86_64-unknown-linux-musl
          - x86_64-pc-windows-gnu
          - x86_64-linux-android
          - aarch64-unknown-linux-gnu
          - aarch64-unknown-linux-musl
          - aarch64-linux-android
          - arm-unknown-linux-gnueabi
          - arm-unknown-linux-gnueabihf
          - arm-unknown-linux-musleabi
          - arm-unknown-linux-musleabihf
          - armv7-unknown-linux-gnueabi
          - armv7-unknown-linux-gnueabihf
          - armv7-unknown-linux-musleabi
          - armv7-unknown-linux-musleabihf
    steps:
      - uses: actions/checkout@v4
      - name: install toolchain
        uses: dtolnay/rust-toolchain@master
        with:
            toolchain: nightly
            targets: ${{ matrix.target }}
      - name: install cross
        run: cargo install cross --git https://github.com/cross-rs/cross
      - name: compile
        run: cross build --release --target=${{ matrix.target }}
      - name: pack unix binary
        if: "!contains(matrix.target, 'windows')"
        run: |
          mkdir -p release-${{ matrix.target }}
          cd release-${{ matrix.target }}
          tar -C ../target/${{ matrix.target }}/release -zcf xtunnel-${{ matrix.target }}.tar.gz xtunnel
      - name: pack windows binary
        if: "contains(matrix.target, 'windows')"
        run: |
          mkdir -p release-${{ matrix.target }}
          cd release-${{ matrix.target }}
          tar -C ../target/${{ matrix.target }}/release -zcf xtunnel-${{ matrix.target }}.tar.gz xtunnel.exe
      - name: add signature
        run: |
          cd release-${{ matrix.target }}
          sha256sum xtunnel-${{ matrix.target }}.tar.gz > xtunnel-${{ matrix.target }}.sha256
      - name: release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files: release-${{ matrix.target }}/*
  release-windows:
    runs-on: windows-latest
    strategy:
      matrix:
        target:
          - x86_64-pc-windows-msvc
    steps:
      - uses: actions/checkout@v4
      - name: install toolchain
        uses: dtolnay/rust-toolchain@master
        with:
            toolchain: nightly
            targets: ${{ matrix.target }}
      - name: compile
        run: cargo build --release --target=${{ matrix.target }}
      - name: pack
        run: |
          mkdir -p release-${{ matrix.target }}
          cd release-${{ matrix.target }}
          tar -C ../target/${{ matrix.target }}/release/ -zcf xtunnel-${{ matrix.target }}.tar.gz xtunnel.exe
          openssl dgst -sha256 -r xtunnel-${{ matrix.target }}.tar.gz > xtunnel-${{ matrix.target }}.sha256
      - name: release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files: release-${{ matrix.target }}/*
  release-apple:
    runs-on: macos-latest
    strategy:
      matrix:
        target:
          - x86_64-apple-darwin
          - aarch64-apple-darwin
          - aarch64-apple-ios
    steps:
      - uses: actions/checkout@v4
      - name: install toolchain
        uses: dtolnay/rust-toolchain@master
        with:
            toolchain: nightly
            targets: ${{ matrix.target }}
      - name: compile
        run: cargo build --release --target=${{ matrix.target }}
      - name: pack
        run: |
          mkdir -p release-${{ matrix.target }}
          cd release-${{ matrix.target }}
          tar -C ../target/${{ matrix.target }}/release/ -zcf xtunnel-${{ matrix.target }}.tar.gz xtunnel
          shasum -a 256 xtunnel-${{ matrix.target }}.tar.gz > xtunnel-${{ matrix.target }}.sha256
      - name: release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files: release-${{ matrix.target }}/*
